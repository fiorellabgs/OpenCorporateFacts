{% extends 'base.html.twig' %}

{% block title %}Hello {{ corporate }}!{% endblock %}

{% block body %}
<style>
    .example-wrapper { margin: 1em auto; max-width: 800px; width: 95%; font: 18px/1.5 sans-serif; }
    .example-wrapper code { background: #F5F5F5; padding: 2px 6px; }
</style>

<div class="example-wrapper">
    <h1>Hello, here are the information about the selected corporate✅</h1>
    <a href="{{ url('homepage') }}">Retour à l'accueil</a>
    <ul>
      <li> id : {{ corporate.id }}</li>
      <li> Name : {{ corporate.Name }}</li>
      <li> Country : {{ corporate.Country }}</li>
    </ul>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/themes/default/style.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.12.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/jstree.min.js"></script>
<div id="jstree_demo">
<div id="TreeData"></div>

<script>
$('#TreeData').jstree({
	'core' : {
		'data' : [
      {
       'text' : 'Résultat d\'exploitation : ',
       'children' : [
          {
            'text' : 'Produits d\'exploitation',
            'children' : [
              {
                'text' : 'Chiffres d\'affaires nets',
                'children' :
                [
                  'Ventes de marchandises : ',
                  'Production vendues de biens : ',
                  'Production vendue de services : '
                ]
              },
              'Production stockée',
              'Production immobilisée',
              'Subvention d\'exploitation',
              'Reprises sur dépréciations, provisions (et amortissements), transfert de charges',
              'Autres produits'
            ]
          },
          {
            'text' : 'Charges d\'exploitation',
            'children' : [
                'Achats de marchandise (y compris droits de douane)',
                'Variation de stock (marchandises)',
                'Achat de matières premières et autres approvisionnements (et droit de douane)',
                'Variation de stock (matières premières et approvisionnements)',
                'Autres achats et charges externes',
                'Impôts, taxes et versements assimilés',
                'Salaires et traitements',
                'Charges sociales',
                {
                  'text' : 'DOTATIONS D\'EXPLOITATION',
                  'children' : [
                    'Sur immobilisations : dotations aux amortissements',
                    'Sur immobilisations : dotations aux dépréciations',
                    'Sur actif circulant : dotations aux dépréciations',
                    'Dotations aux provisions'
                  ]
                },
                'Autres charges'
              ]
          },
        ]
      },
      {
        'text' : 'Résultat financier : 100000€',
        'children' : [
          {
            'text' : 'Produits financiers',
            'children' : [
              'Produits financiers de participations',
              'Produits des autres valeurs mobilières et créances de l\'actif immobilisé',
              'Autres intérêts et produits assimilés',
              'Reprises sur dépréciations et provisions, transferts de charges',
              'Différences positives de change',
              'Produits nets sur cessions de valeurs mobilières de placement'
            ]
          },
          {
            'text' : 'Charges financières',
            'children' : [
              'Dotations financières aux amortissements, dépréciations et provisions',
              'Intérêts et charges assimilées',
              'Différences négatives de change',
              'Charges nettes sur cessions de valeurs mobilières de placement',
            ]
          }
        ]
      },
      {
        'text' : 'Résultat exceptionnel : 100000€',
        'children' : [
          {
            'text' : 'Produits exceptionnels',
            'children' : [
              'Produits exceptionnels sur opérations de gestion',
              'Produits exceptionnels sur opérations en capital',
              'Reprises sur dépréciations et provisions, transferts de charges',
            ]
          },
          {
            'text' : 'Charges exceptionnelles',
            'children' : [
              'Charges exceptionnelles sur opérations de gestion',
              'Charges exceptionnelles sur opérations en capital',
              'Dotations exceptionnelles aux amortissements, dépréciations et provisions',
            ]
          }
        ]
      },
      'Participation des salariés aux résultats de l\'entreprise : ',
      'Impôts sur les bénéfices :'
		]
	}
});
</script>
</div>


<canvas id="GraphCA"></canvas>
<canvas id="GraphPartageRichesse"></canvas>
{% block javascripts %}
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script>
  <script>
  var colors = ['#EAB543',
                '#25CCF7',
                '#82589F',
                '#55E6C1',
                '#2C3A47',
                '#B33771',
                '#3B3B98',
                '#F97F51',
                '#CAD3C8'];

  var xLabels = [];
  var effectifsMoyens = [399, 438, 499, 537, 582, 647, 791];

  var CA = [];
  var achatMarchandises = [];
  var salaires = [];
  var cotisationSociale = [];
  var taxes = [];
  var subventions = [];

  var resultatExploitation = [];
  var resultatFinancier = [];
  var resultatExceptionnel = [];

  var Participation = [];
  var ImpotsSurLesSocietes = [];

  var resultatPourProprietaire = [];
  var resultatExceptionnelEtFinancier = [];

  {% for comptesDeResultat in corporate.ComptesDeResultats %}
    xLabels.push({{ comptesDeResultat.year }});
    CA.push({{ comptesDeResultat.ChiffresAffairesNet}});
    salaires.push({{ comptesDeResultat.SalairesEtTraitements}});
    cotisationSociale.push({{ comptesDeResultat.ChargesSociales}});
    resultatExploitation.push({{ comptesDeResultat.ProduitsExploitation - comptesDeResultat.ChargesExploitation}});

    taxes.push(666);
    subventions.push(666);
    achatMarchandises.push(666);

    resultatFinancier.push(666);
    resultatExceptionnel.push(666);
    Participation.push(666);
    ImpotsSurLesSocietes.push(666);

  {% else %}
  <li> Pas de comptes de résultats trouvé</li>
  {% endfor %}

  var autreCharges = [];
  var taxesMoinsSubventions = [];
  for(var i = 0; i < xLabels.length; i++){
      // Mise en forme des données du graphe sur le CA
      taxesMoinsSubventions.push(taxes[i] - subventions[i])
      autreCharges.push(CA[i] - salaires[i] - cotisationSociale[i] - taxesMoinsSubventions[i] - achatMarchandises[i] - resultatExploitation[i]);

      // Mise en forme des données sur le graphe de la répartition du résultat d'exploitation
      resultatPourProprietaire.push(resultatExploitation[i] + resultatFinancier[i] + resultatExceptionnel[i] - Participation[i] - ImpotsSurLesSocietes[i]);
      resultatExceptionnelEtFinancier.push(-resultatFinancier[i] - resultatExceptionnel[i]);

      var factor = 1000000
      Participation[i] = Math.round(1000 * Participation[i] / factor) / 1000;
      ImpotsSurLesSocietes[i] = Math.round(1000 * ImpotsSurLesSocietes[i] / factor) / 1000;
      resultatPourProprietaire[i] = Math.round(1000 * resultatPourProprietaire[i] / factor) / 1000;
      resultatExceptionnelEtFinancier[i] = Math.round(1000 * resultatExceptionnelEtFinancier[i] / factor) / 1000;

      // Compute to percentage (%)
      salaires[i] = Math.round(100 * salaires[i] * 100 / CA[i])/100;
      cotisationSociale[i] = Math.round(100 * cotisationSociale[i] * 100 / CA[i])/100;
      taxesMoinsSubventions[i] = Math.round(100 * taxesMoinsSubventions[i] * 100 / CA[i])/100;
      achatMarchandises[i] = Math.round(100 * achatMarchandises[i] * 100 / CA[i])/100;
      autreCharges[i] = Math.round(100 * autreCharges[i] * 100 / CA[i])/100;
      resultatExploitation[i] = Math.round(100 * resultatExploitation[i] * 100 / CA[i])/100;
  }

  var CAChartData = {
  	labels: xLabels,
  	datasets: [{
  		label: 'Salaires Brutes',
  		backgroundColor: colors[6],
  		data: salaires
  	}, {
  		label: 'Cotisations Sociales',
  		backgroundColor: colors[1],
  		data: cotisationSociale
  	}, {
  		label: 'Taxes diverses retranchées des subventions',
  		backgroundColor: colors[3],
  		data: taxesMoinsSubventions
  	}, {
  		label: 'Achat de marchandises pour projet',
  		backgroundColor: colors[0],
  		data: achatMarchandises
  	}, {
  		label: 'Autre Charges',
  		backgroundColor: colors[4],
  		data: autreCharges
  	}, {
  		label: 'Résultat d\'exploitation',
  		backgroundColor: colors[5],
  		data: resultatExploitation
  	}]
  };

  new Chart(document.getElementById('GraphCA').getContext('2d'), {
  	type: 'bar',
  	data: CAChartData,
  	options: {
  		title: {
  			display: true,
  			text: 'Répartition de l\'utilisation du CA de Smile (en % du CA)'
  		},
  		tooltips: {
  			mode: 'index',
  			intersect: false
  		},
  		responsive: true,
  		scales: {
  			xAxes: [{
  			    scaleLabel:{
  	                display:true,
  	                labelString: 'Année'
  	            },
  				stacked: true,
  			}],
  			yAxes: [{
  		        scaleLabel:{
  		            display:true,
  		            labelString: '% du CA'
  		        },
  			    ticks: {
  			        max: 100,
  			        min: 0
  			    },
  				stacked: true
  			}]
  		}
  	}
  });

  var ResultatExploitationChartData = {
  	labels: xLabels,
  	datasets: [{
  		label: 'Participation',
  		backgroundColor: colors[1],
  		data: Participation
  	}, {
  		label: 'Impôts',
  		backgroundColor: colors[0],
  		data: ImpotsSurLesSocietes
  	},{
  		label: 'Résultat pour les propriétaires de l\'entreprise',
  		backgroundColor: colors[5],
  		data: resultatPourProprietaire
  	}, {
  		label: 'Résultat financier et exceptionnel',
  		backgroundColor: colors[7],
  		data: resultatExceptionnelEtFinancier
  	}]
  };

  new Chart(document.getElementById('GraphPartageRichesse').getContext('2d'), {
  	type: 'bar',
  	data: ResultatExploitationChartData,
  	options: {
  		title: {
  			display: true,
  			text: 'Répartition du résultat d\'exploitation de Smile (en %)'
  		},
  		tooltips: {
  			mode: 'index',
  			intersect: false
  		},
  		responsive: true,
  		scales: {
  			xAxes: [{
  			    scaleLabel:{
  	                display:true,
  	                labelString: 'Année'
  	            },
  				stacked: false,
  			}],
  			yAxes: [{
  			    scaleLabel:{
  	                display:true,
  	                labelString: 'millions d\'euros'
  	            },
  				stacked: false
  			}]
  		}
  	}
  });
  </script>
 {% endblock %}
</div>
{% endblock %}
